{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\covid-tracker\\\\src\\\\Components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255,0,0,0.5)\",\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : null;\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\", \"rgba(242, 234, 0, 0.5)\"],\n        hoverBackgroundColor: [\"rgba(0, 77, 153)\", \"rgba(30, 102, 49)\", \"rgba(255, 51, 51)\", \"rgba(204, 153, 0)\"],\n        data: [confirmed.value, recovered.value, deaths.value, confirmed.value - (recovered.value + deaths.value)]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/user/covid-tracker/src/Components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","hoverBackgroundColor","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n              \"rgba(242, 234, 0, 0.5)\",\r\n            ],\r\n            hoverBackgroundColor: [\r\n              \"rgba(0, 77, 153)\",\r\n              \"rgba(30, 102, 49)\",\r\n              \"rgba(255, 51, 51)\",\r\n              \"rgba(204, 153, 0)\",\r\n            ],\r\n            data: [\r\n              confirmed.value,\r\n              recovered.value,\r\n              deaths.value,\r\n              confirmed.value - (recovered.value + deaths.value),\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}